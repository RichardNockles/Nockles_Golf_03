[gd_scene load_steps=6 format=3 uid="uid://bwtvxeem57pfy"]

[ext_resource type="PackedScene" uid="uid://c0u7wmvto8ifo" path="res://01_Assets/01_3D/03_Environment/Course.glb" id="1_fllru"]
[ext_resource type="ArrayMesh" uid="uid://bbtferxcltbfv" path="res://01_Assets/01_3D/02_Props/trees/tree_mesh.tres" id="2_xekfs"]

[sub_resource type="GDScript" id="GDScript_bsdyx"]
script/source = "extends Node3D

# ‚úÖ Signal to notify Main.gd when the ball enters a hole
signal ball_entered_hole  

func _ready():
    print(\"‚õ≥ Course Loaded!\")

    # ‚úÖ Connect signals for all hole triggers
    var hole_triggers = get_tree().get_nodes_in_group(\"holes\")
    for hole_trigger in hole_triggers:
        if hole_trigger.has_signal(\"body_entered\"):
            hole_trigger.connect(\"body_entered\", Callable(self, \"_on_HoleTrigger_body_entered\"))

func _on_HoleTrigger_body_entered(body):
    if body.name == \"GolfBall\":
        print(\"üèÜ Ball entered a hole!\")
        ball_entered_hole.emit()  # ‚úÖ Emit signal to notify Main.gd
"

[sub_resource type="GDScript" id="GDScript_1eyi8"]
script/source = "extends Node3D

@export var terrain: Node3D  # Assign `Masters_course_001` (the terrain) here

func _ready():
    if not terrain:
        print(\"‚ùå Error: Terrain not assigned!\")
        return

    print(\"‚úÖ Snapping trees to the terrain...\")
    
    var physics_space = get_world_3d().direct_space_state

    for tree in get_children():
        if not tree is MeshInstance3D:
            continue  # Skip non-mesh objects

        var tree_pos = tree.global_transform.origin
        var ray_start = tree_pos + Vector3(0, 5, 0)  # Start slightly above
        var ray_end = tree_pos + Vector3(0, -50, 0)  # Cast downward

        var query = PhysicsRayQueryParameters3D.create(ray_start, ray_end)
        var result = physics_space.intersect_ray(query)

        if result and result.collider == terrain:
            tree.global_transform.origin.y = result.position.y
            print(\"üå≥ Snapped\", tree.name, \"to\", result.position.y)
        else:
            print(\"‚ö†Ô∏è Could not find terrain for\", tree.name)
"

[sub_resource type="CylinderShape3D" id="CylinderShape3D_4rdaq"]

[node name="Course" instance=ExtResource("1_fllru")]
script = SubResource("GDScript_bsdyx")

[node name="Manual_Trees" type="Node3D" parent="." index="1"]
script = SubResource("GDScript_1eyi8")

[node name="11th_tree" type="MeshInstance3D" parent="Manual_Trees" index="0"]
transform = Transform3D(1.91, 0, 0, 0, 3, 0, 0, 0, 1.91, 12.5841, 0.167596, 89.9318)
mesh = ExtResource("2_xekfs")

[node name="11th_tree2" type="MeshInstance3D" parent="Manual_Trees" index="1"]
transform = Transform3D(1.91, 0, 0, 0, 4, 0, 0, 0, 1.91, 16.9479, 0.167596, 93.0109)
mesh = ExtResource("2_xekfs")

[node name="11th_tree3" type="MeshInstance3D" parent="Manual_Trees" index="2"]
transform = Transform3D(1.91, 0, 0, 0, 3, 0, 0, 0, 1.91, 216.943, -2.47172, -156.059)
mesh = ExtResource("2_xekfs")

[node name="11th_tree4" type="MeshInstance3D" parent="Manual_Trees" index="3"]
transform = Transform3D(1.72796, 0, -0.813781, 0, 4, 0, 0.813781, 0, 1.72796, 212.305, -2.125, -145.896)
mesh = ExtResource("2_xekfs")

[node name="11th_tree5" type="MeshInstance3D" parent="Manual_Trees" index="4"]
transform = Transform3D(1.91, 0, 0, 0, 3, 0, 0, 0, 1.91, 217.717, 2.92239, -114.465)
mesh = ExtResource("2_xekfs")

[node name="11th_tree6" type="MeshInstance3D" parent="Manual_Trees" index="5"]
transform = Transform3D(1.72796, 0, -0.813781, 0, 4, 0, 0.813781, 0, 1.72796, 180.57, 0.0795279, -166.631)
mesh = ExtResource("2_xekfs")

[node name="HoleTrigger_01" type="Area3D" parent="." index="2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 32.289, 0.559937, 88.2061)

[node name="CollisionShape3D" type="CollisionShape3D" parent="HoleTrigger_01" index="0"]
shape = SubResource("CylinderShape3D_4rdaq")

[node name="HoleTrigger_02" type="Area3D" parent="." index="3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -33.5136, 2.26286, 142.292)

[node name="CollisionShape3D" type="CollisionShape3D" parent="HoleTrigger_02" index="0"]
shape = SubResource("CylinderShape3D_4rdaq")

[connection signal="body_entered" from="HoleTrigger_01" to="." method="_on_hole_trigger_01_body_entered"]
